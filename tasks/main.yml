# Copyright 2020-2023 Chris Croome
#
# This file is part of the Webarchitects Locale Ansible role.
#
# The Webarchitects Locale Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Locale Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Locale Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Skip the tasks in this role as locale is false
  ansible.builtin.debug:
    msg: "The locale variable need to be true for the tasks in this role to run."
  when: not locale | bool
  tags:
    - locale

- name: Set locale
  block:

    # When in a docker container locale_init.stdout is usually sh or bash
    - name: Check if system has been booted with systemd as init system
      ansible.builtin.command: "ps -p 1 -o comm="
      changed_when: false
      check_mode: false
      register: locale_ps
      failed_when: locale_ps.rc is not regex('^0|47$')

    - name: Set a fact for the init system
      ansible.builtin.set_fact:
        locale_init: "{{ locale_ps.stdout }}"
      when: locale_ps.rc == 0

    - name: When the exit code is 47 assume is is because this is a chroot
      ansible.builtin.set_fact:
        locale_init: chroot
      when: locale_ps.rc == 47

    - name: Debug the ini system when it is not systemd
      ansible.builtin.debug:
        var: locale_init
      when: locale_init != "systemd"

    - name: Debconf default locale
      ansible.builtin.debconf:
        name: locales
        question: locales/default_environment_locale
        value: "{{ locale_lang }}"
        vtype: select

    - name: Locale package present
      ansible.builtin.apt:
        pkg:
          - locales
        dpkg_options: force-confdef,force-confold
        install_recommends: true
        update_cache: true
        state: present
      environment:
        DEBIAN_FRONTEND: noninteractive
        LANG: "en_US.UTF-8"
      register: locale_present
      failed_when: >-
        ( ( locale_init == "systemd" ) and ( locale_present.rc != 0 ) ) or
        ( ( locale_init == "chroot" ) and ( locale_present.rc != 100 ) )

    - name: Locale present
      community.general.locale_gen:
        name: "{{ locale_lang }}"
        state: present

    - name: Check and set systemd environment
      block:

        - name: Check the systemd environment
          ansible.builtin.command: systemctl show-environment
          changed_when: false
          check_mode: false
          register: locale_systemctlenv

        - name: Set a fact for the systemd environment
          ansible.builtin.set_fact:
            locale_environment: "{{ locale_systemctlenv.stdout | string | community.general.jc('ini') }}"

        - name: Set systemd LANG  # noqa command-instead-of-module
          ansible.builtin.command: "systemctl set-environment LANG={{ locale_lang }}"
          changed_when: true
          when: >-
            ( locale_environment.LANG is not defined ) or
            ( ( locale_environment.LANG is defined ) and ( locale_environment.LANG != locale_lang ) )

        - name: Set systemd LANGUAGE  # noqa command-instead-of-module
          ansible.builtin.command: "systemctl set-environment LANGUAGE={{ locale_language }}"
          changed_when: true
          when: >-
            ( locale_environment.LANGUAGE is not defined ) or
            ( ( locale_environment.LANGUAGE is defined ) and ( locale_environment.LANGUAGE != locale_language ) )

      when: locale_init.stdout == "systemd"

    - name: Slurp /etc/default/locale
      ansible.builtin.slurp:
        src: /etc/default/locale
      register: locale_default_existing_b64encoded
      changed_when: false
      check_mode: false

    - name: Set a fact for the default locale
      ansible.builtin.set_fact:
        locale_default_locale: "{{ locale_default_existing_b64encoded['content'] | b64decode | string | community.general.jc('ini') }}"

    - name: Update locale
      ansible.builtin.command: "update-locale LANG={{ locale_lang }} LANGUAGE={{ locale_language }}"
      changed_when: true
      when: >-
        ( locale_default_locale.LANG is not defined ) or
        ( ( locale_default_locale.LANG is defined ) and ( locale_default_locale.LANG != locale_lang ) ) or
        ( locale_default_locale.LANGUAGE is not defined ) or
        ( ( locale_default_locale.LANGUAGE is defined ) and ( locale_default_locale.LANGUAGE != locale_language ) )

  when: locale | bool
  tags:
    - locale
...
